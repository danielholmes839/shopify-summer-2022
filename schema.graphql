type Product {
    id: ID!
    name: String!
    description: String!
    price: Float!
    stock: Int!
    category: String
}

# output for product mutations
type ProductPayload {
    error: String       # simple error message
    product: Product
}

# input for product mutations
input ProductInput {
    name: String!
    description: String!
    price: Float!
    stock: Int!
    category: String
}

type Mutation {
    # product create operation
    productCreate(input: ProductInput!): ProductPayload!

    # product update operation
    productUpdate(id: ID!, input: ProductInput!): ProductPayload!

    # product update category operation
    productUpdateCategory(id: ID!, category: String): ProductPayload!

    # product delete operation
    productDelete(id: ID!): ProductPayload!
}

type Query {
    # product get by id
    product(id: ID!): Product

    # product get all. #TODO add pagination options 
    products: [Product!]!

    # product get all by category
    productsByCategory(category: String): [Product!]!
}
